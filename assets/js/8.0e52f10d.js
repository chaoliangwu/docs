(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{177:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("现代前端应用面临的浏览器环境是非常复杂的，尤其是移动端页面。")]),t._v(" "),e("p",[t._v("面对如此多样的浏览器环境，我们需要一种异常监控机制，在页面上有异常发生时，能够获得错误的基本信息、文件url、行号等。接下来我们探讨几种实现全局异常捕获的实现方式。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),e("p",[t._v("其中")]),t._v(" "),t._m(8),t._v(" "),e("p",[t._v("这种方式看似完美，其实有三个致命的问题。")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),e("p",[t._v("一些浏览器(例如Chrome)能够捕获未处理的Promise错误。")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._v(" "),e("p",[t._v("那么有没有“偷懒”的方法呢？")]),t._v(" "),t._m(16),t._v(" "),e("p",[e("router-link",{attrs:{to:"/Learning/ast.html"}},[t._v("查看下文")])],1)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"引言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[this._v("#")]),this._v(" 引言")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"try-catch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#try-catch"}},[this._v("#")]),this._v(" try-catch")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这个方法最简单粗暴，我们都写过"),s("code",[this._v("try-catch")]),this._v("。将可能会出错的代码使用"),s("code",[this._v("try-catch")]),this._v("包裹，就可以捕获到其中的错误：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-jsx harmony extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("缺点也很明显，我们不确定哪些地方会出错，并且随着项目体积的增大，"),s("code",[this._v("try-catch")]),this._v("的代价也与日俱增。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"全局捕获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局捕获"}},[this._v("#")]),this._v(" 全局捕获")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("好在浏览器为我们提供了全局的"),s("code",[this._v("window.onerror")]),this._v("事件，我们可以使用它来搜集页面上的错误：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-jsx harmony extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lineno"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colno"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[e("code",[t._v("mesage")]),t._v(" 异常基本信息")]),t._v(" "),e("li",[e("code",[t._v("source")]),t._v(" 为发生异常的文件地址")]),t._v(" "),e("li",[e("code",[t._v("lineno")]),t._v(" 错误行号")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("由于浏览器的同源策略，当加载自不同域（协议、域名、端口三者任一不同）的脚本中发生语法错误时，为避免信息泄露，语法错误的细节将不会报告，而代之简单的"),e("code",[t._v("Script error")])]),t._v(" "),e("li",[t._v("我们发布到生产环境中的代码，往往都经过压缩混淆，文件名、函数名、变量名已经不具有可读性了需要借助"),e("code",[t._v("sourceMap")]),t._v("定位错误。")]),t._v(" "),e("li",[t._v("无法捕获"),e("code",[t._v("Promise")]),t._v("中的异常")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"未处理的promise异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未处理的promise异常"}},[this._v("#")]),this._v(" 未处理的Promise异常")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用"),s("code",[this._v("Promise")]),this._v("编写异步代码时，使用"),s("code",[this._v("reject")]),this._v("来处理错误。有时，开发者通常会忽略这一点，导致一些错误没有得到处理。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("监听"),s("code",[this._v("unhandledrejection")]),this._v("事件，即可捕获到未处理的"),s("code",[this._v("Promise")]),this._v("错误：")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-jsx harmony extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'unhandledrejection'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" ···"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"使用ast自动为函数以及promise添加捕获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用ast自动为函数以及promise添加捕获"}},[this._v("#")]),this._v(" 使用AST自动为函数以及Promise添加捕获")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("像我们上面所提到的，随着项目体积的逐渐增加，对每一个函数都手动添加"),s("code",[this._v("try-catch")]),this._v("无疑是一个巨大的工作量。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("答案是肯定的。接下来我们介绍一种通过操作"),s("code",[this._v("AST")]),this._v("(抽象语法树)来为所有函数以及"),s("code",[this._v("Promise")]),this._v("添加捕获的方法。")])}],!1,null,null,null);s.default=n.exports}}]);